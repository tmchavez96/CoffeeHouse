{"version":3,"sources":["assets/images/hotDrink.jpg","assets/images/BCHblack.png","assets/images/bellLogoTrans.png","LandingPage.js","subPages/homeComponent.js","subPages/menu.js","subPages/contact.js","home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","LandingPage","props","state","leaving","value","console","log","this","className","onClick","src","logo","alt","React","Component","HomeComponent","to","MenuItem","name","itemImage","price","description","HotMenu","menuItem","ColdMenu","MenuNavButton","selected","title","MenuComponent","useState","menu","setMenu","menuType","hotButton","coldButton","ContactSubComponent","icon","info","details","ContactComponent","NavItem","link","Navigation2","setSelected","HomePage","open","setOpen","bellLogo","width","height","CSSTransition","in","unmountOnExit","timeout","classNames","exact","path","MainPage","onLanding","setState","config","duration","from","position","top","bottom","left","right","overflow","borderRadius","style","clickHandler","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4fc414d0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hotDrink.339975fc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/BCHblack.af8a497a.png\";","module.exports = __webpack_public_path__ + \"static/media/bellLogoTrans.3a9d6dbd.png\";","import React from \"react\";\r\nimport './LandingPage.css';\r\nimport logo from \"./assets/images/BCHblack.png\";\r\n//import { Spring } from 'react-spring/renderprops';\r\n\r\nclass LandingPage extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            leaving: props.value,\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log(\"leaving state was -- \" + this.state.leaving )\r\n       if(this.state.leaving){\r\n        return (\r\n            <div className=\"landingBody\"\r\n                onClick={() => this.props.onClick()}\r\n            >\r\n                <div className=\"landingTextWhite\">\r\n                    <h1 className=\"landingTextWhiteText\">\r\n                        Welcome To\r\n                            </h1>\r\n                    <h1 className=\"landingTextWhiteText\">\r\n                        Bellaria Coffee House\r\n                            </h1>\r\n                    <img src={logo} className=\"logo\" alt=\"logo\"/>\r\n                    <div className=\"desktopText clickMe\">\r\n                        Click anywhere to Enter\r\n                            </div>\r\n                    <div className=\"mobileText clickMe\">\r\n                        Tap anywhere to Enter\r\n                            </div>\r\n                </div>\r\n            </div>\r\n        ) \r\n       }else{\r\n        return (\r\n            <div className=\"landingBody\"\r\n                onClick={() => this.props.onClick()}\r\n            >\r\n            </div>\r\n        ) \r\n       }\r\n    }\r\n}\r\n\r\nexport default LandingPage;\r\n","import React from \"react\";\r\n//import router?\r\nimport './homeComponent.css';\r\n\r\nimport {\r\n    Link\r\n} from \"react-router-dom\"\r\n\r\nfunction HomeComponent() {\r\n    return (\r\n        <div className=\"home-comp-body\">\r\n            <div className=\"home-comp-covid\">\r\n                <div className=\"home-comp-covid-message\">\r\n                    We are open  during covid! <br></br>\r\n                    Come get some air and fresh coffee!\r\n                </div>\r\n            </div>\r\n            <div className=\"home-comp-intro\">\r\n                <h3 className=\"home-comp-header\">\r\n                    Experience <br></br>\r\n                    WORLD CLASS COFFEE\r\n                </h3>\r\n\r\n                <h3 >\r\n                    We serve a variety of hand-crafted <br></br>\r\n                    coffe and tea beverages made fresh for you\r\n                </h3>\r\n                <div className=\"home-comp-menu-link\">\r\n                    <Link className=\"home-comp-menu-link-text\" to=\"/menu\">Menu</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default HomeComponent;","import React, { useState } from \"react\";\r\n//import router?\r\nimport './menu.css';\r\nimport menuItem from \"../assets/images/hotDrink.jpg\";\r\n\r\nfunction MenuItem(props) {\r\n    return (\r\n        <div className=\"menu-item\">\r\n            <div className=\"menu-item-name\">\r\n                {props.name}\r\n            </div>\r\n            <div className=\"image-price-flex\">\r\n                <img className=\"menu-item-img\" src={props.itemImage} />\r\n                <div className=\"prices\">\r\n                    <div className=\"itemRate small\">\r\n                        <div>Small</div>   <div>${props.price[0]}</div>\r\n                    </div>\r\n                    <div className=\"itemRate medium\">\r\n                        <div>Medium</div>   <div>${props.price[1]}</div>\r\n                    </div>\r\n                    <div className=\"itemRate large\">\r\n                        <div>Large</div>   <div>${props.price[2]}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"menu-item-description\">\r\n                {props.description}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction HotMenu() {\r\n    return (\r\n        <div className=\"menu-portion\">\r\n        <div className=\"itemsContainer\">\r\n            <MenuItem itemImage={menuItem} name=\"Mocha\" price={[3.50, 4.50, 4.99]} description=\"A delicous, creamy coffee mixed with mocha\" />\r\n            <MenuItem itemImage={menuItem} name=\"Americano\" price={[3.50, 4.50, 4.99]} description=\"Traditional Dark Flavor\" />\r\n            <MenuItem itemImage={menuItem} name=\"Mocha\" price={[3.50, 4.50, 4.99]} description=\"A delicous, creamy coffee mixed with mocha\" />\r\n            <MenuItem itemImage={menuItem} name=\"Americano\" price={[3.50, 4.50, 4.99]} description=\"Traditional Dark Flavor\" />\r\n            <MenuItem itemImage={menuItem} name=\"Mocha\" price={[3.50, 4.50, 4.99]} description=\"A delicous, creamy coffee mixed with mocha\" />\r\n            <MenuItem itemImage={menuItem} name=\"Americano\" price={[3.50, 4.50, 4.99]} description=\"Traditional Dark Flavor\" />\r\n            <MenuItem itemImage={menuItem} name=\"Mocha\" price={[3.50, 4.50, 4.99]} description=\"A delicous, creamy coffee mixed with mocha\" />\r\n            <MenuItem itemImage={menuItem} name=\"Americano\" price={[3.50, 4.50, 4.99]} description=\"Traditional Dark Flavor\" />\r\n            <MenuItem itemImage={menuItem} name=\"Mocha\" price={[3.50, 4.50, 4.99]} description=\"A delicous, creamy coffee mixed with mocha\" />\r\n            <MenuItem itemImage={menuItem} name=\"Americano\" price={[3.50, 4.50, 4.99]} description=\"Traditional Dark Flavor\" />\r\n            <MenuItem itemImage={menuItem} name=\"Mocha\" price={[3.50, 4.50, 4.99]} description=\"A delicous, creamy coffee mixed with mocha\" />\r\n            <MenuItem itemImage={menuItem} name=\"Americano\" price={[3.50, 4.50, 4.99]} description=\"Traditional Dark Flavor\" />\r\n        </div>\r\n    </div>  \r\n    )\r\n}\r\n\r\nfunction ColdMenu() {\r\n    return (\r\n        <div className=\"menu-portion\">\r\n            <div className=\"itemsContainer\">\r\n                <MenuItem itemImage={menuItem} name=\"Iced Mocha\" price={[3.50, 4.50, 4.99]} description=\"A delicous, creamy coffee mixed with mocha\" />\r\n                <MenuItem itemImage={menuItem} name=\"Iced Americano\" price={[3.50, 4.50, 4.99]} description=\"Traditional Dark Flavor\" />\r\n                <MenuItem itemImage={menuItem} name=\"Iced Mocha\" price={[3.50, 4.50, 4.99]} description=\"A delicous, creamy coffee mixed with mocha\" />\r\n                <MenuItem itemImage={menuItem} name=\"Iced Americano\" price={[3.50, 4.50, 4.99]} description=\"Traditional Dark Flavor\" />\r\n                <MenuItem itemImage={menuItem} name=\"Iced Mocha\" price={[3.50, 4.50, 4.99]} description=\"A delicous, creamy coffee mixed with mocha\" />\r\n                <MenuItem itemImage={menuItem} name=\"Iced Americano\" price={[3.50, 4.50, 4.99]} description=\"Traditional Dark Flavor\" />\r\n                <MenuItem itemImage={menuItem} name=\"Iced Mocha\" price={[3.50, 4.50, 4.99]} description=\"A delicous, creamy coffee mixed with mocha\" />\r\n                <MenuItem itemImage={menuItem} name=\"Iced Americano\" price={[3.50, 4.50, 4.99]} description=\"Traditional Dark Flavor\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction MenuNavButton(props){\r\n    if(!props.selected){\r\n        return (\r\n            <h2>\r\n                {props.title}\r\n            </h2>\r\n        )\r\n    }else{\r\n        return (\r\n            <h2 className=\"menuNavButtonSelected\">\r\n                {props.title}\r\n            </h2>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction MenuComponent() {\r\n    const [menu, setMenu] = useState(true);\r\n    var menuType = menu ? <HotMenu/> : <ColdMenu/>\r\n    var hotButton = <MenuNavButton title=\"Hot Drinks\" selected={menu}/>\r\n    var coldButton = <MenuNavButton title=\"Cold Drinks\" selected={!menu}/>\r\n    return (\r\n        <div className=\"menu-body\">\r\n            <h1> Menu </h1>\r\n            <div className=\"menuNav\">\r\n                <div className=\"menuNavButton\" onClick={() => setMenu(true)}>\r\n                    {hotButton}\r\n                </div>\r\n                <div className=\"menuNavButton\" onClick={() => setMenu(false)}>\r\n                    {coldButton}\r\n                </div>\r\n            </div>\r\n            {menuType}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default MenuComponent;","import React from \"react\";\r\n//import router?\r\nimport './contact.css';\r\n\r\nimport { BsClock } from 'react-icons/bs'\r\nimport { BsGeo } from 'react-icons/bs';\r\nimport {BsEnvelopeFill} from 'react-icons/bs';\r\nimport { BsChatDots } from 'react-icons/bs';\r\n\r\n\r\nfunction ContactSubComponent(props){\r\n    return (\r\n        <div className=\"contatc-sub-comp\">\r\n            <h1 className=\"contatc-sub-comp-icon\">\r\n                {props.icon}<br></br> {props.title}\r\n            </h1>\r\n            <div className=\"contatc-sub-comp-info\">\r\n                {props.info}\r\n            </div>\r\n            <div className=\"contatc-sub-comp-details\">\r\n                {props.details}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction ContactComponent () {\r\n    return (\r\n        <div className=\"contact-body\">\r\n            <h1>\r\n                Contact Us!\r\n            </h1>\r\n            <div className=\"contact-body-flex\">\r\n                <ContactSubComponent title=\"Hours\" icon={<BsClock/>} info=\"5am-5pm Monday-Friday\" details=\"6am-5pm Saturday-Sunday\"/>\r\n                <ContactSubComponent title=\"Phone\" icon={<BsChatDots/>} info=\"999-999-9999\" details=\"Call In an order ahead of time\"/>\r\n                <ContactSubComponent title=\"Email\" icon={<BsEnvelopeFill/>} info=\"me@gmail\" details=\"Email for inquires\"/>\r\n                <ContactSubComponent title=\"Address\" icon={<BsGeo/>} info=\"me@gmail\" details=\"Email for inquires\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ContactComponent;","import React, { useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport './home.css';\r\nimport { BsList } from 'react-icons/bs';\r\n\r\nimport bellLogo from \"./assets/images/bellLogoTrans.png\";\r\n\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\n//sub pages\r\nimport HomeComponent from './subPages/homeComponent'\r\nimport MenuComponent from './subPages/menu'\r\nimport ContactComponent from './subPages/contact'\r\n\r\nfunction NavItem(props) {\r\n  if(props.name == props.selected){\r\n    return (\r\n      <div className=\"mainNavElmSelected\">\r\n      <Link className=\"mainNavLink\" to={props.link}><div className=\"hoverText\">{props.name} </div></Link>\r\n    </div>\r\n    )\r\n  }else{\r\n    return (\r\n      <div className=\"mainNavElm\">\r\n      <Link className=\"mainNavLink\" to={props.link}><div className=\"hoverText\">{props.name} </div></Link>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction Navigation() {\r\n  const [selected, setSelected] = useState(\"home\");\r\n  var currentPage = \"home\"\r\n  return (\r\n    <div className=\"mainNavBar\">\r\n      <CSSTransition in={selected == \"home\"}\r\n        timeout={500}\r\n        classNames=\"main-nav-elm\">\r\n        <div className=\"mainNavElm\" onClick={() => setSelected(\"home\")}>\r\n          <Link className=\"mainNavLink\" to=\"/\"><div className=\"hoverText\">Home </div></Link>\r\n        </div>\r\n      </CSSTransition>\r\n      <CSSTransition in={selected == \"menu\"}\r\n        timeout={500}\r\n        classNames=\"main-nav-elm\">\r\n        <div className=\"mainNavElm\" onClick={() => setSelected(\"menu\")}>\r\n          <Link className=\"mainNavLink\" to=\"/menu\"><div className=\"hoverText\">Menu </div></Link>\r\n        </div>\r\n      </CSSTransition>\r\n      <CSSTransition in={selected == \"contact\"}\r\n        timeout={500}\r\n        classNames=\"main-nav-elm\">\r\n        <div className=\"mainNavElm\" onClick={() => setSelected(\"contact\")}>\r\n          <Link className=\"mainNavLink\" to=\"/contact\"><div className=\"hoverText\"> Contact </div></Link>\r\n        </div>\r\n      </CSSTransition>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Navigation2() {\r\n  const [selected, setSelected] = useState(\"Home\");\r\n  return (\r\n    <div className=\"mainNavBar\">\r\n      <div onClick={() => setSelected(\"Home\")}>\r\n        <NavItem name=\"Home\" selected={selected} link=\"/\" onClick={() => setSelected(\"Home\")}/>\r\n      </div>\r\n      <div onClick={() => setSelected(\"Menu\")}>\r\n      <NavItem name=\"Menu\" selected={selected} link=\"/menu\" onClick={() => setSelected(\"Menu\")}/> \r\n      </div>\r\n      <div onClick={() => setSelected(\"Contact\")}>\r\n        <NavItem name=\"Contact\" selected={selected} link=\"/contact\" onClick={() => setSelected(\"Conact\")}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nfunction HomePage() {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <Router>\r\n\r\n      <div className=\"home-page-body\">\r\n        <div className=\"homePageHeader\">\r\n          <img src={bellLogo} width=\"100px\" height=\"100px\" />\r\n          <div className=\"hamburgerButton\" onClick={() => setOpen(!open)}>\r\n            <BsList />\r\n          </div>\r\n\r\n        </div>\r\n        <div className=\"navContainer\">\r\n          <CSSTransition in={open}\r\n            unmountOnExit\r\n            timeout={500}\r\n            classNames=\"menu-primary\">\r\n            <div className=\"menu\">\r\n              <Navigation2 />\r\n            </div>\r\n          </CSSTransition>\r\n        </div>\r\n        {/*\r\n            A <Switch> looks through all its children <Route>\r\n            elements and renders the first one whose path\r\n            matches the current URL. Use a <Switch> any time\r\n            you have multiple routes, but you want only one\r\n            of them to render at a time\r\n          */}\r\n        <div className=\"nav-page-cont\">\r\n          <Switch >\r\n            <Route exact path=\"/\">\r\n              <HomeComponent />\r\n            </Route>\r\n            <Route path=\"/menu\">\r\n              <MenuComponent />\r\n            </Route>\r\n            <Route path=\"/contact\">\r\n              <ContactComponent />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default HomePage;","import React from \"react\";\r\n\r\nimport './App.css';\r\nimport LandingPage from './LandingPage';\r\nimport HomePage from './home'\r\nimport { Spring, config } from 'react-spring/renderprops'\r\n\r\n\r\nclass MainPage extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      onLanding: true,\r\n    }\r\n  }\r\n\r\n  clickHandler() {\r\n    console.log(\"state is false\")\r\n    this.setState({ onLanding: false })\r\n  }\r\n\r\n  render() {\r\n    console.log(\"rendering..\")\r\n    const pageNav = this.state.onLanding;\r\n    const alwaysBlue = true;\r\n    const gavinBelson = false;\r\n    if(pageNav === false){\r\n      return (\r\n        <div>\r\n          <Spring\r\n            config={{duration : 800}}\r\n            from={{ \r\n              position: \"absolute\",\r\n              top: \"0%\",\r\n              bottom:\"0%\",\r\n              left: \"0%\",\r\n              right: \"0%\",\r\n              overflow: \"hidden\",\r\n              borderRadius: \"0px\",\r\n              }\r\n            }\r\n            to={{ top: \"50%\",\r\n            bottom:\"50%\",\r\n            left: \"50%\",\r\n            right: \"50%\",\r\n            borderRadius: \"500px\"\r\n             }}>\r\n            {props => \r\n              <div style={props}>\r\n                <LandingPage onClick={()=>this.clickHandler()}\r\n                   value={false}\r\n                />\r\n              </div>\r\n            }\r\n          </Spring>\r\n  \r\n          < HomePage />\r\n        </div >\r\n      )\r\n    } else {\r\n      return (\r\n        <div>\r\n          <div style={{ \r\n              position: \"absolute\",\r\n              top: 0,\r\n              bottom:\"0%\",\r\n              left: 0,\r\n              right: 0,\r\n              }}>\r\n            \r\n            <LandingPage  onClick={()=>this.clickHandler()}\r\n            value={true}\r\n            />\r\n          </div>\r\n        </div >\r\n    )\r\n    }\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <MainPage />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}